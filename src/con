#!/bin/bash

# Normally, we'd use 'shflags' here, but we can't seem to do patial flag
# progessing... even though something like it has been emprically working for
# awhile.

# Handle the 'set resource' case.
if [ x"$1" == x"-s" ] || [ x"$1" == x"--setresource" ]; then
    shift
    if [ $# -eq 0 ]; then # clear implied resource, if it exists.
	if [ -f $HOME/.conveyor-workflow/implied-resource ]; then
	    rm -f $HOME/.conveyor-workflow/implied-resource
	    echo "Implied resource cleared."
	fi
    elif [ $# -eq 1 ]; then # set implied resource.
	case "$1" in
	    topics|releases|issues|repos)
		echo "$1" > $HOME/.conveyor-workflow/implied-resource
		echo "Resource set as '$1'.";;
	    *)
		echo "Unknown resource '$1'." >&2
		exit 1;;
	esac
    else
	echo "You may only supply a single supplied resource: topics, releases, or issues." >&2
	exit 1
    fi
    exit 0 # If we successfully set resource, then we're done.
    # 'set-resources' handling
elif [ x"$1" == x"--verify" ] || [ x"$1" == x"--verifyresource" ] || [ x"$1" == x"--verifyglobal" ]; then
    OPTION="$1"; shift
    case "$1" in
	'')
	    echo "ERROR: '--verify(*)' requires value." >&2
	    exit 1;;
	topics|releases|issues|repos)
	    if [ "$OPTION" == "--verify" ] || [ "$OPTION" == "--verifyresource" ]; then
		echo "Resource '$1' is valid."
		exit 0
	    else
		echo "'$1' is not a valid global action."
		exit 1
	    fi;;
	status|sync|init)
	    if [ "$OPTION" == "--verify" ] || [ "$OPTION" == "--verifyglobal" ]; then
		echo "Global action '$1' is valid."
		exit 0
	    else
		echo "'$1' is not a valid resource."
		exit 1
	    fi;;
	*)
	    echo "Resource '$1' is invalid."
	    exit 1;;
    esac
fi
# else



#/**
#  * <div class="subHeader"><span>Options Parsing</span></div>
#  */

source "$HOME/.conveyor/config"
CON_HOME=`which con`
CON_HOME=`dirname "$CON_HOME"`
source "$CON_HOME/lib/help.sh"

if [ $# -lt 1 ]; then
    usage "Please indicate resource."
    exit 1
fi


FOUND_SOMETHING=0
while [ $# -gt 0 ] && [ $FOUND_SOMETHING -eq 0 ]; do
    FOUND_SOMETHING=1
    if [ "$1" == '--verbose' ] || [ "$1" == '-v' ]; then
	FOUND_SOMETHING=0
	shift
    elif [ "$1" == '--test' ]; then
	FOUND_SOMETHING=0
	shift
	export GIT_CONVEY_TEST_MODE=0 # bash true
    fi
done

#/**
#* <div class="subHeader"><span>Main Logic</span></div>
#* <div class="p">
#*   Normally, we would process the arguments into named variables as a first
#*   step. In this case, the processing differences between 'implied
#*   resources' and 'explicit resources' means we have to do some work to
#*   establish the semantics of teh arguments.
#* </div>
#*/
if [ x"$1" == x"help" ]; then
    shift
    if [ $# -eq 0 ]; then
	usage
    else
	RESOURCE="$1"; shift
	source "$CON_HOME/git-conveyor-$RESOURCE"
	if [ $# -eq 0 ]; then
	    resource_usage
	else
	    ACTION="$1"; shift
	    resource_help $ACTION
	fi
    fi
    exit 0
fi


if [ -f $HOME/.conveyor-workflow/implied-resource ]; then
    RESOURCE=`cat $HOME/.conveyor-workflow/implied-resource`
    source "$CON_HOME/git-conveyor-$RESOURCE"
    if [ x`type -t action_check` != x'function' ]; then
	echo "WARNING: 'action_check' function not defined for '$RESOURCE'." >&2
	# Nothing else to do.
    else
	if ! action_check "$1" && ! con --verify "$1" >/dev/null; then
	    usage "ERROR: Cannot understand '$1' as action, resource, or global."
	    exit 1
	elif con --verifyresource "$1" >/dev/null; then
	    rm -f $HOME/.conveyor-workflow/implied-resource
	    RESOURCE="$1"; shift
	    echo "WARNING: understood '$RESOURCE' as resource; implied resource reset." >&2
	elif con --verifyglobal "$1" >/dev/null; then
	    RESOURCE="$1"; shift # and nothing else
	# else, it's an action of the implied resource, which is just fine
	fi
    fi
else
    RESOURCE="$1"; shift
fi

if [ ! -f "$CON_HOME/git-conveyor-$RESOURCE" ] && [ ! -f "$CON_HOME/conveyor-$RESOURCE" ]; then
    usage "Unknown resource: '$RESOURCE'."
    exit 1
fi

case "$RESOURCE" in
    topics|releases|sync|init)
	git conveyor "$RESOURCE" "$@"
	;;
    *)
	if [ -f "$CON_HOME/conveyor-$RESOURCE" ]; then
	    source "$CON_HOME/conveyor-$RESOURCE"
	    process "$@"
	else
	    echo "ERROR: Unknown resource '$RESOURCE'." >&2
	    exit 1
	fi
	;;
esac
