#!/bin/sh
#/**
#  * <div class="p">
#  * 'Controller' script for the <a
#  *   href="http://dogfoodsoftware.com/documentation/conveyor/ref/Branching-Strategy">Conveyor
#  *   branch strategy</a> extensions. Please refer to the branch strategy
#  *   documentation for details on usage.
#  * </div>
#  * <div id="Implementation" data-perspective="implementation" class="grid_12 blurbSummary">
#  *   <div class="blurbTitle">Implementation</div>
#  *   <div class="p">
#  *     This script essentially reads the first argument&mdash;which is
#  *     understood as the resource name&mdash;and then looks for the matching
#  *     <code>git-convey-*</code> script to handle the resource action.
#  *   </div>
#  *   <div class="subHeader"><span>Platform Workarounds</span></div>
#  *   <div class="p">
#  *     Thanks to <a href=""></a> <a
#  *     href="https://github.com/nvie/gitflow">GitFlow</a> for these
#  *     workarounds. If you don't like our approach to branch management,
#  *     GitFlow offers a great alternative.
#  *   </div>
#  */

# If in future versions, we want to use shFlags for commandline option
# processing, we will want to set this variable, used by shFlags for
# compatibility purposes. As we don't currently do any option processing, it
# is not necessary.
# if uname -s | egrep -iq 'bsd'; then export EXPR_COMPAT=1; fi

# For Windows, we need to change '\' to '/'.
export GIT_CONVEY_DIR=$(dirname "$(echo "$0" | sed -e 's|\\|/|g')")

# Regularize getopt parsing across Linux platforms.
export POSIXLY_CORRECT=1

#/**
#  *   <div class="subHeader">Helper Functions and Usage Check</div>
#  *   <div class="p">
#  *     It's bash, so helper funtctions have to come first.
#  *   </div>
#  */

global_help() {
    echo "Use 'git convey help [<resource> [<action>]]' for details and refer to "
    echo "http://dogfoodsoftware.com/documentatione/conveyor/ref/Branching-Strategy for"
    echo "more on the underlying branch strategy which git-convey implements."
    echo
}

# /**
#  * <div class="subHeader"><span>usage()</span></div>
#  * <div class="p">
#  *   Prints usage information for the <code>git-convey</code> script. Takes a
#  *   single optional argument, which is interpretted as a string containing
#  *   additional information about whyt he usage is being displayed. The error
#  *   is printed to <code>stderr</code>.
#  * </div>
#  */
usage() {
    if [ x"$1" != x"" ]; then
	echo $1 >&2
	echo >&2
    fi

    echo "usage: git convey <resource|global action>"
    echo
    echo "Available resources:"
    echo "   topics    Manage topics / topic branches."
    echo "   releases  Manage releases."
    echo
    echo "Available global actions:"
    echo "   sync      Clones and synchronizes local repo with origin."
    echo "   help      Prints this help."
    echo
    global_help
}

if [ $# -lt 1 ]; then
    usage "Please indicate resource."
    exit 1
fi

#/**
#  * <div class="subHeader"><span>Options Parsing</span></div>
#  */

source "$GIT_CONVEY_DIR/lib/shflags"
source "$GIT_CONVEY_DIR/common-checks.sh"
source "$GIT_CONVEY_DIR/common-lib.sh"
FLAGS_PARENT="git convey"

DEFINE_boolean verbose false 'be verbose => show git commands' 'v'
DEFINE_boolean test false 'run in test mode'

FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

if [ $FLAGS_test -eq $FLAGS_TRUE ]; then
    export GIT_CONVEY_TEST_MODE=$FLAGS_TRUE
fi

#/**
#  * <div class="subHeader"><span>Main Logic</span></div>
#  */
RESOURCE="$1"; shift

if [ x"$RESOURCE" == x"help" ]; then
    if [ $# -lt 1 ]; then
	usage
	exit 0
    else
	HELP_MODE=${FLAGS_TRUE}
	RESOURCE="$1"; shift
    fi
fi

if [ ! -e "$GIT_CONVEY_DIR/git-convey-$RESOURCE" ]; then
    usage "Unknown resource: '$RESOURCE'."
    exit 1
fi
. "$GIT_CONVEY_DIR/git-convey-$RESOURCE"

if [ x"$HELP_MODE" != x"$FLAGS_TRUE" ]; then
    # We process any action options here so that we can fire off the actions's
    # main logic without further ado.
    if type "resource_opts" >/dev/null 2>&1; then
	FLAGS_PARENT=""
	resource_opts
	FLAGS "$@" || exit $?
	eval set -- "${FLAGS_ARGV}"
    fi

    resource_do "$@"
else # we are in help mode
    if [ $# -lt 1 ]; then # it's general resource help
	resource_usage
    else
	ACTION="$1"; shift
	resource_help $ACTION
    fi
fi
#/**
#  * </div><!-- #Implementation.blurbSummary -->
#  */
