#!/bin/sh
# /**
#  * <div class="p">
#  *   Script to implement 'topics' management within git. This is an
#  *   extension defined by <a
#  *   href="http://dogfoodsoftware.com/documentation/git-convey">Git
#  *   Convey</a>. Notice that there is no 'force' option on any of the
#  *   commands. You may create your own branches or do anything else you like
#  *   with the underlying git repo, and Git Convey itself need not be forced.
#  * </div>
#  * <div id="Implementation" data-perspective="implementation" class="grid_12 blurbSummary">

topics_usage() {
    if [ x"$1" != x"" ]; then
	echo $1 >&2
	echo
    fi

    echo "usage: git convey topics [list [<pattern>]|[start|commit|done [--no-submit]] [<pattern>]]]"
    echo
    echo "Available task commands are:"
    echo "   list      Lists open topics."
    echo "   start     Starts/opens a topic branch."
    echo "   commit    Commits changes to a topic branch."
    echo "   done      Submits a topic branch; with '-no-submit', deletes the topic branch."
    echo
    global_help
}

. "$GIT_CONVEY_DIR/lib/shflags"
FLAGS_PARENT="git convey topics"

# shFlags does not allow '-' in the option names... which forces us to
# break convention... grr...
DEFINE_boolean 'no_submit' 'false' "used with 'done'"

FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

if [ $# -lt 1 ]; then
    TASK="list"
else
    TASK="$1"
fi

task_do() {
    case "$TASK" in
	list)
	    echo list;;
	start)
	    echo start;;
	commit)
	    echo commit;;
	done)
	    echo done;;
	*)
	    topics_usage "Unknown task '$TASK'."
	    exit 1;
    esac
}

#  * </div><!-- #Implementation.blurbSummary -->
