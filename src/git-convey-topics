#!/bin/sh
# /**
#  * <div class="p">
#  *   Script to implement 'topics' management within git. This is an
#  *   extension defined by <a
#  *   href="http://dogfoodsoftware.com/documentation/git-convey">Git
#  *   Convey</a>.
#  * </div>
#  * <div id="Implementation" data-perspective="implementation" class="grid_12 blurbSummary">

resource_usage() {
    if [ x"$1" != x"" ]; then
	echo $1 >&2
	echo >&2
    fi

    echo "usage: git convey topics [list [<pattern>]|[start|commit|done [--no-submit]] [<branch>]]]"
    echo
    echo "Available task commands are:"
    echo "   list      Lists open topics. This is the default action."
    echo "   start     Starts/opens a topic branch."
    echo "   join      Joins an existing topic branch."
    echo "   commit    Commits changes to a topic branch."
    echo "   delete    Deletes the local topic branch."
    echo "   done      Submits a topic branch; with '-no-submit', deletes the topic branch."
    echo "   help      Print this help."
    echo
    echo "   --[no]submit may be comibned with 'done' to indicate whether the branch should"
    echo "   be submitted (default) or just deleted (--nosubmit)."
    # TODO : 'no-submit' would be the more standard option, but we are limited
    # by shFlags here... good contrib opportunity.
    echo
    global_help
}

resource_opts() {
    # Going against bash standards, shFlags requires 'nomark' as the long
    # default value.
    DEFINE_boolean 'mark' true "Controls whether the current topics branch is marked with a '*' in the 'list' task"
}

resource_help() {
    if [ $# -lt 1 ]; then
	resource_usage
    else
	TASK="$1"; shift
	case "$TASK" in
	    list)
		echo "Lists the topic branches active in the current repository.";;
	    start)
		echo "help start";;
	    join)
		echo "help join";;
	    commit)
		echo "help commit";;
	    delete)
		echo "help delete";;
	    done)
		echo "help done";;
	    *)
		resource_usage "Unknown task: '$TASK'."
		exit 1;
	esac
    fi
}

resource_do() {
    if [ $# -lt 1 ]; then
	TASK="list"
    else
	TASK="$1"; shift
    fi
    if [ $# -ge 1 ]; then
	BRANCH_NAME="$1"; shift
    fi

    case "$TASK" in
	list)
	    list_resources topic;;
	start)
	    start_branch 'topic' "$BRANCH_NAME";;
	join)
	    echo join;;
	commit)
	    echo commit;;
	delete)
	    echo delete;;
	done)
	    echo done;;
	help)
	    TASK="$BRANCH_NAME"
	    if [ x"$TASK" == x"" ]; then
		resource_usage
	    else
		resource_help "$TASK"
	    fi
	    ;;
	*)
	    resource_usage "Unknown task: '$TASK'."
	    exit 1;
    esac
}

#  * </div><!-- #Implementation.blurbSummary -->
